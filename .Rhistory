newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(dataset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
lapply(name, function(dataset) sorting(dataset, num))
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
tail(rankall("pneumoniaa","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
as.data.frame(lapply(name, function(dataset) sorting(dataset, num)))
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
lapply(name, function(dataset) sorting(dataset, num))
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
temp
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
as.data.frame(temp)
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
res <- as.data.frame(temp)
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall("pneumonia","worst")
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T))
df
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T),na)
lapply(temp, cbind(temp,names(temp)))
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T))
lapply(temp, cbind(temp,names(temp)))
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
?cbind.data.frame
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
#df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T))
#lapply(temp, cbind(temp,names(temp)))
vect1 <- lapply(temp, as.character)
vect1
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
#df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T))
#lapply(temp, cbind(temp,names(temp)))
vect1 <- as.character(lapply(temp, as.character))
vect1
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
#df <- data.frame(matrix(unlist(temp), nrow=length(temp), byrow=T))
#lapply(temp, cbind(temp,names(temp)))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- as.character(lapply(temp, names))
vect2
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
?names
res
vect1 <- as.character(lapply(res, as.character))
vect1
vect2 <- as.character(lapply)
vect2 <- as.character(lapply(res, names))
vect2
vect2 <- as.character(lapply(res, names[[]]))
vect2 <- as.character(lapply(res, names[[res]]))
vect2 <- as.character(lapply(res, names(res)))
names(name)
class(name)
names(res)
vect2 <- names(res)
cbind(vect1, vect2)
as.data.frame(cbind(vect1,vect2))
?as.data.frame
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- names(temp)
res <- as.data.frame(cbind(vect1,vect2), row.names = vect2, col.names = c("hospital","state"))
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- names(temp)
res <- as.data.frame(cbind(vect1,vect2), row.names = vect2, ..., col.names = c("hospital","state"))
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- names(temp)
res <- as.data.frame(cbind(vect1,vect2), row.names = vect2,optional = FALSE, ..., col.names = c("hospital","state"))
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- names(temp)
res <- as.data.frame(cbind(vect1,vect2), row.names = vect2)
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
rankall <- function(outcome, num="best")
{
set <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)
if(outcome == "heart attack")
x <- 11
else if(outcome == "heart failure")
x <- 17
else if(outcome == "pneumonia")
x <- 23
else
stop("Invalid outcome")
states <- split(set, set$State)
name <- lapply(states, function(elt) elt[,c(2,x)])
temp <- lapply(name, function(dataset) sorting(dataset, num))
vect1 <- as.character(lapply(temp, as.character))
vect2 <- names(temp)
res <- as.data.frame(cbind(vect1,vect2), row.names = vect2)
colnames(res) <- c("hospital","state")
res
}
sorting <- function(dataset, num)
{
newset <- dataset[order(as.numeric(dataset[[2]]),dataset[[1]],na.last = NA),]
if(num == "best")
num <- 1
if(num == "worst")
num <- nrow(newset)
newset[num,1]
}
tail(rankall("pneumonia","worst"),3)
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
dim(set)
x <- c(1,2,3,4)
y <- c(0,1)
boxplot(y~x)
boxplot(formula=y~x)
y <- c(0,1,2,3)
boxplot(formula=y~x)
boxplot(x,y)
installed.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
